-->"Browser Object Model(BOM) in JavaScript":
  ->The Browser Object Model (BOM) allows JavaScript to interact with the browser.
  ->It provides objects that enable manipulation of the browser window and its various properties.
  ->Unlike the Document Object Model (DOM), the BOM is not standardized, and implementations may vary across browsers.

-->Core Objects of BOM:
  1.Window Object:
    ->Represents the browser window or tab.
    ->It is the global object in JavaScript (e.g., `window.alert()` is the same as `alert()`).
    ->Key Methods and Properties:
      ->`window.alert(message)` – Displays an alert box.
      ->`window.confirm(message)` – Displays a confirmation box.
      ->`window.prompt(message, default)` – Displays a prompt box.
      ->`window.open(url, name, specs)` – Opens a new browser window.
      ->`window.close()` – Closes the current window.
      ->`window.setTimeout(function, milliseconds)` – Executes a function after a delay.
      ->`window.setInterval(function, milliseconds)` – Repeatedly executes a function at specified intervals.

  2.Navigator Object:
    ->Provides information about the browser.
    ->Key Properties:
      ->`navigator.appName` – Name of the browser.
      ->`navigator.appVersion` – Browser version information.
      ->`navigator.userAgent` – User agent string.
      ->`navigator.platform` – Operating system platform.

  3.Location Object:
    ->Provides information about the current URL and allows redirection.
    ->Key Properties and Methods:
      ->`location.href` – Returns the entire URL.
      ->`location.protocol` – Returns the protocol (e.g., "https:").
      ->`location.host` – Returns the hostname and port.
      ->`location.pathname` – Returns the path of the URL.
      ->`location.search` – Returns the query string (e.g., "?id=123").
      ->`location.assign(url)` – Loads a new document.
      ->`location.reload()` – Reloads the current page.

  4.History Object:
    ->Provides access to the browser’s session history.
    ->Key Methods:
      ->`history.back()` – Loads the previous URL in the history list.
      ->`history.forward()` – Loads the next URL in the history list.
      ->`history.go(n)` – Loads a specific URL from the history list (e.g., `history.go(-1)` for back).

  5.Screen Object:
    ->Provides information about the user's screen.
    ->Key Properties:
      ->`screen.width` – Screen width in pixels.
      ->`screen.height` – Screen height in pixels.
      ->`screen.availWidth` – Available screen width (excluding system UI).
      ->`screen.availHeight` – Available screen height.

-->Examples:

//1.Display an alert box
window.alert("Hello, World!");
    ->window.alert(): Displays a pop-up alert box with a message.
    ->window is the global object representing the browser window.

// 2. Redirect to another URL
location.href = "https://example.com";
    ->location.href: Gets or sets the current page URL.
    ->This changes the page to "https://example.com" (redirects the user).

// 3. Open a new window
window.open("https://example.com", "_blank", "width=800,height=600");
    ->window.open(): Opens a new browser tab or window.
    ->URL: "https://example.com"
    ->_blank: Opens in a new tab/window.
    ->Features: width=800 and height=600 control window size.

// 4. Display browser information
console.log(navigator.userAgent);
    ->navigator.userAgent: Returns a string containing details about the user's browser and operating system.
    ->console.log() outputs the information to the browser's Developer Console.

// 5. Reload the current page
location.reload();
    ->location.reload(): Reloads the current webpage (like pressing F5).
    ->true (optional parameter) forces a reload from the server (bypassing cache).

-->Summary:
  ->BOM allows interaction with the browser environment.
  ->Main BOM objects include:
  ->window – Main interface to the browser.
  ->navigator – Information about the browser.
  ->location – URL manipulation.
  ->history – Navigation through history.
  ->screen – User’s screen properties.